// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebShop.Data;

namespace WebShop.Data.Migrations
{
    [DbContext(typeof(WebShopDbContext))]
    partial class WebShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);


            modelBuilder.Entity("WebShop.Core.Domain.Car", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Moodel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Car");

                    modelBuilder.Entity("WebShop.Core.Domain.ExistingFilePath", b =>
                        {
                            b.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b.Property<string>("FilePath")
                                .HasColumnType("nvarchar(max)");

                            b.Property<Guid?>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b.HasKey("Id");

                            b.HasIndex("ProductId");

                            b.ToTable("ExistingFilePath");
                        });

                    modelBuilder.Entity("WebShop.Core.Domain.Product", b =>
                        {
                            b.Property<Guid?>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b.Property<int>("Amount")
                                .HasColumnType("int");

                            b.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b.Property<DateTime>("ModifiedAt")
                                .HasColumnType("datetime2");

                            b.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b.Property<double>("Price")
                                .HasColumnType("float");

                            b.HasKey("Id");

                            b.ToTable("Product");
                        });

                    modelBuilder.Entity("WebShop.Core.Domain.ExistingFilePath", b =>
                        {
                            b.HasOne("WebShop.Core.Domain.Product", null)
                                .WithMany("ExistingFilePaths")
                                .HasForeignKey("ProductId");
                        });

                    modelBuilder.Entity("WebShop.Core.Domain.Product", b =>
                        {
                            b.Navigation("ExistingFilePaths");
                        });
                });
    }
    } }
